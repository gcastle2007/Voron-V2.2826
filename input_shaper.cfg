[adxl345]
cs_pin: PA15
#axes_map: -x, y, -z
axes_map: -z, -x, y
spi_bus: spi3
#spi_software_sclk_pin: PB3
#spi_software_mosi_pin: PB5
#spi_software_miso_pin: PB4

[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 20  # an example

[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 67.6
shaper_type_y = mzv
shaper_freq_y = 28.6

#####################################################################
#  Macros
#####################################################################
# !!! This macro only works with the use of gcode_shell_command.py !!!
# you find both needed files at /klipper_config/script
#  - gcode_shell_command.py -> klipper add on file
#  - plot_graph.sh -> shell script that is executed
# 
# Setup:
#  - symlink or copy gcode_shell_command.py to /klipper/klippy/extra
#    e.g ln -s /home/pi/klipper_config/script/gcode_shell_command.py /home/pi/klipper/klippy/extras/gcode_shell_command.py
#  - klipper service restart
#
# Please inspect the shell script by yourself and use it at your own risk
# Functions:
#  - Generate folder if needed. Default path is IS_FOLDER=~/klipper_config/input_shaper
#  - Store a defined number of results for the RESONANCES_TEST/BELT_TEST. Default is STORE_RESULTS=5
#  - generate/store following files for RESONANCES_TEST:
#     - resonances_x_YYYYMMDD_HHMMSS.csv
#     - resonances_y_YYYYMMDD_HHMMSS.csv
#     - resonances_x_YYYYMMDD_HHMMSS.png
#     - resonances_y_YYYYMMDD_HHMMSS.png
#  - generate/store following files for BELT_TEST:
#     - raw_data_belt_a_YYYYMMDD_HHMMSS.csv
#     - raw_data_belt_b_YYYYMMDD_HHMMSS.csv
#     - resonances_belts_YYYYMMDD_HHMMSS.png
#  - remove files from /tmp
#####################################################################
[gcode_macro RESONANCES_TEST]
description: Run input shaper test
gcode:
#  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
#  _CG28                                                 ; home if needed
#  TURN_OFF_HEATERS                                      ; turn off heaters
#  M107                                                  ; turn off fan
#  {% if user.hw.chamber.fan %} M141 {% endif %}         ; exhaust fan off
#  {% if user.hw.filter.ena %} _SET_FILTER {% endif %}   ; filter off
  _PRINT_AR T="INPUT SHAPER: Noise values, check if sensor is installed"
  MEASURE_AXES_NOISE                                    ; get noise value in log
  _PRINT_AR T="INPUT SHAPER: Resonance Tests starting"
  _PRINT_AR T="INPUT SHAPER: Mesasure X axis"
  TEST_RESONANCES AXIS=X                                ; measure X
  _PRINT_AR T="INPUT SHAPER: Mesasure Y axis"
  TEST_RESONANCES AXIS=Y                                ; measure Y
  _PRINT_AR T="INPUT SHAPER: Resonance Tests done"
  _PRINT_AR T="INPUT SHAPER: Generate graph in backround"
  RUN_SHELL_COMMAND CMD=plot_graph PARAMS=SHAPER

[gcode_macro BELT_TEST]
description: Run resonance test to analyze belts
gcode:
#  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
#  _CG28                                                 ; home if needed
#  TURN_OFF_HEATERS                                      ; turn off heaters
#  M107                                                  ; turn off fan
#  {% if user.hw.chamber.fan %} M141 {% endif %}         ; exhaust fan off
#  {% if user.hw.filter.ena %} _SET_FILTER {% endif %}   ; filter off
  _PRINT_AR T="BELT TEST: Noise values, check if sensor is installed"
  MEASURE_AXES_NOISE                                    ; get noise value in log
  _PRINT_AR T="BELT TEST: Resonance Tests starting ..."
  _PRINT_AR T="BELT TEST: Mesasure B belt"
  TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data NAME=b
  _PRINT_AR T="BELT TEST: Mesasure A belt"
  TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=a
  _PRINT_AR T="BELT TEST: Resonance Tests done"
  _PRINT_AR T="BELT TEST: Generate graph in backround"
  RUN_SHELL_COMMAND CMD=plot_graph PARAMS=BELT

# Shell Comand is not supported by a default klipper installation 
[gcode_shell_command plot_graph]
command: bash /home/pi/klipper_config/script/plot_graph.sh
timeout: 60.0
verbose: True
# from klicky_probe config
[homing_override]
axes:                             xyz
gcode:
    # collect user state variables
    _User_Variables
    {% set V = printer["gcode_macro _User_Variables"].verbose %}
    {% set Hzh = printer["gcode_macro _User_Variables"].home_z_height|float %}
    {% set Gm = printer["gcode_macro _User_Variables"].gravity %}
    {% set Ax = printer["gcode_macro _User_Variables"].attachmove_x|default(0) %}
    {% set Ay = printer["gcode_macro _User_Variables"].attachmove_y|default(0) %}
    {% set Az = printer["gcode_macro _User_Variables"].attachmove_z|default(0) %}
    {% set Da = printer["gcode_macro _User_Variables"].dockarmslenght|default(0)  %}
    #if there is no Attach movement, assume older behavior
    {% if Ax == Ay == Az == 0 %}
        {% set Ay = Da %}
    {% endif %}
    _CheckProbe action=query
    # reset parameters
    {% set X, Y, Z = False, False, False %}
    # which axes have been requested for homing
    {% if not 'X' in params
        and not 'Y' in params
        and not 'Z' in params %}
        {% set X, Y, Z = True, True, True %}
    {% else %}
        {% if 'X' in params %}
            {% set X = True %}
        {% endif %}
        {% if 'Y' in params %}
            {% set Y = True %}
        {% endif %}
        {% if 'Z' in params %}
            {% set Z = True %}
        {% endif %}
        {% if 'X' in params
          and 'Y' in params
          and 'Z' in params %}
            # reset homing state variables
            # if homing all axes
            _Homing_Variables reset=1
         {% endif %}
    {% endif %}
        _entry_point function=homing_override
    # if Z is not homed, do not move the bed if it goes down
    {% if ('z' not in printer.toolhead.homed_axes) %}
        {% if ('bed' in Gm) %} # checks if the bed or gantry move with gravity
            {% set  Hzh = 0 %}
        {% elif ('gantry' in Gm) %} # checks if the bed or gantry move with gravity
            {% set  Hzh = Hzh %}
        {% else %}
            { action_raise_error("To avoid head crashes, configure Klicky probe gravity variable!") }
        {% endif %}
    {% endif %}
    
    {% if Z %}
        {% if ('z' in printer.toolhead.homed_axes) %}
            {% if (printer.toolhead.position.z < Hzh) %}
                {% if V %}
                    { action_respond_info("Z too low, performing ZHOP") }
                {% endif %}
                G0 Z{Hzh} F1200
            {% endif %}
        {% else %}
            {% if V %}
                { action_respond_info("Z not homed, forcing full G28") }
            {% endif %}
            SET_KINEMATIC_POSITION X=0 Y=0 Z=0
            G0 Z{Hzh} F600
            {% set X, Y, Z = True, True, True %}
        {% endif %}
    {% endif %}
    # if the dock is oriented on the Y, first do Y endstop
    {% if Ay == 0 %}
        # Home y
        {% if Y %}
            {% if V %}
                { action_respond_info("Homing Y") }
            {% endif %}
            G28 Y0
        {% endif %}
        {% set Y = 0 %}
    {% endif %}
    # Home y
    {% if Y %}
        {% if V %}
            { action_respond_info("Homing Y") }
        {% endif %}
        G28 Y0
    {% endif %}
    # Home x
    {% if X %}
        {% if V %}
            { action_respond_info("Homing X") }
        {% endif %}
        G28 X0
    {% endif %}
    # Home z
    {% if Z %}
        {% if V %}
            { action_respond_info("Homing Z") }
        {% endif %}
        # if probe is configured as endstop, attach it, else dock the probe if attached
        {% if printer['configfile'].config["stepper_z"]["endstop_pin"] == 'probe:z_virtual_endstop' %}
            Attach_Probe
        {% else %}
            Dock_Probe
        {% endif %}
        _Home_Z
        # if probe is configured as endstop, dock it
        {% if printer['configfile'].config["stepper_z"]["endstop_pin"] == 'probe:z_virtual_endstop' %}
            Dock_Probe
        {% endif %}
    {% endif %}
    _CheckProbe action=query
    # park the toolhead
    _Park_Toolhead
    _exit_point function=homing_override
